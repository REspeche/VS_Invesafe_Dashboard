//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resource.Views.Dashboard {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class TypeAccount {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TypeAccount() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Resource.Views.Dashboard.TypeAccount", typeof(TypeAccount).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string btnCancel {
            get {
                return ResourceManager.GetString("btnCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        public static string btnClose {
            get {
                return ResourceManager.GetString("btnClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select.
        /// </summary>
        public static string btnSelect {
            get {
                return ResourceManager.GetString("btnSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View Detail.
        /// </summary>
        public static string btnViewDetail {
            get {
                return ResourceManager.GetString("btnViewDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I understand that Invesafe may request additional documentation to verify that the indicated data is correct.
        /// </summary>
        public static string check1 {
            get {
                return ResourceManager.GetString("check1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can invest without limit of any amount, as long as your investment does not exceed 5% of the subscription of each Project..
        /// </summary>
        public static string infoAccredit {
            get {
                return ResourceManager.GetString("infoAccredit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With an economic investment limit: You can invest up to a maximum amount of $ 20,000 per Project, or participate in a maximum of 5% of the Project subscription, whichever is less..
        /// </summary>
        public static string infoNoAccredit {
            get {
                return ResourceManager.GetString("infoNoAccredit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unlimited.
        /// </summary>
        public static string lblAccreditAmount {
            get {
                return ResourceManager.GetString("lblAccreditAmount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Investor.
        /// </summary>
        public static string lblInvestor {
            get {
                return ResourceManager.GetString("lblInvestor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $20,000 maximum.
        /// </summary>
        public static string lblNoAccreditAmount {
            get {
                return ResourceManager.GetString("lblNoAccreditAmount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected.
        /// </summary>
        public static string lblSelected {
            get {
                return ResourceManager.GetString("lblSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Investment funds.
        /// </summary>
        public static string option1 {
            get {
                return ResourceManager.GetString("option1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixed income securities.
        /// </summary>
        public static string option2 {
            get {
                return ResourceManager.GetString("option2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Equities.
        /// </summary>
        public static string option3 {
            get {
                return ResourceManager.GetString("option3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Derivative instruments.
        /// </summary>
        public static string option4 {
            get {
                return ResourceManager.GetString("option4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other financial instruments.
        /// </summary>
        public static string option5 {
            get {
                return ResourceManager.GetString("option5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Have you invested in these financial instruments at least twice in the past two years?.
        /// </summary>
        public static string question1 {
            get {
                return ResourceManager.GetString("question1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accredit Account.
        /// </summary>
        public static string subTitle {
            get {
                return ResourceManager.GetString("subTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accredited.
        /// </summary>
        public static string titAccredit {
            get {
                return ResourceManager.GetString("titAccredit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Information for the Accredited Investor.
        /// </summary>
        public static string titInfoInvestor {
            get {
                return ResourceManager.GetString("titInfoInvestor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Information for the Uncredited Investor.
        /// </summary>
        public static string titInfoInvestorNo {
            get {
                return ResourceManager.GetString("titInfoInvestorNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to My Account.
        /// </summary>
        public static string title {
            get {
                return ResourceManager.GetString("title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not Accredited.
        /// </summary>
        public static string titNoAccredit {
            get {
                return ResourceManager.GetString("titNoAccredit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What type of investor are you?.
        /// </summary>
        public static string titTypeInvestor {
            get {
                return ResourceManager.GetString("titTypeInvestor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Law 5/2015 for the Promotion of Business Financing establishes different protection measures for retail investors. Professional investors, large assets or those who receive financial advice can request treatment as an accredited investor and invest with no economic limit. You can request this &quot;accredited investor&quot; treatment now or at any time in the &quot;My data / Credit account&quot; position. Check the option that best suits your characteristics:.
        /// </summary>
        public static string txtInfoInvestor {
            get {
                return ResourceManager.GetString("txtInfoInvestor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We inform you that by default, all users are considered as non-accredited investors. Non-accredited investors cannot invest more than $ 20,000 per project, nor participate in more than 5% of its subscription. Likewise, the amount of your total annual investments in all Collective Financing Platforms cannot exceed 20% of your annual gross income, according to the last fiscal year closed. &lt;br /&gt; &lt;br /&gt; In this sense, you are warned of the following circumstances: &lt;br /&gt; The collective financing projects publi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string txtInfoInvestorNo {
            get {
                return ResourceManager.GetString("txtInfoInvestorNo", resourceCulture);
            }
        }
    }
}
