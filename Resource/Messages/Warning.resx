<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="aceptAgree" xml:space="preserve">
    <value>You must accept the conditions to continue.</value>
    <comment>200</comment>
  </data>
  <data name="amountFail" xml:space="preserve">
    <value>The maximum to invest in this project is ${0}, since this amount is what is missing to reach the target amount to be collected.</value>
    <comment>201</comment>
  </data>
  <data name="errorAccountExist" xml:space="preserve">
    <value>The account number already exists within your records. You cannot continue saving it.</value>
    <comment>202</comment>
  </data>
  <data name="errorAccountInvalid" xml:space="preserve">
    <value>The selected account is not valid.</value>
    <comment>203</comment>
  </data>
  <data name="errorAmountMaxRetry" xml:space="preserve">
    <value>The amount entered of ${0} exceeds the maximum available to withdraw from ${1}. Please decrease the value to be withdrawn.</value>
    <comment>204</comment>
  </data>
  <data name="errorAmountToBig" xml:space="preserve">
    <value>The amount entered to invest is greater than the current balance of your account. Please decrease the value to invest.</value>
    <comment>205</comment>
  </data>
  <data name="errorAmountTransfer" xml:space="preserve">
    <value>The amount entered exceeds the maximum allowed for a bank transfer. Please decrease the value to invest.</value>
    <comment>206</comment>
  </data>
  <data name="filesIncomplete" xml:space="preserve">
    <value>Please upload at least one file to continue.</value>
    <comment>207</comment>
  </data>
  <data name="formIncomplete" xml:space="preserve">
    <value>Please, complete all the information correctly to continue</value>
    <comment>208</comment>
  </data>
  <data name="investZero" xml:space="preserve">
    <value>You cannot continue until you enter an amount to invest.</value>
    <comment>209</comment>
  </data>
  <data name="loginError5" xml:space="preserve">
    <value>The current password does not match</value>
    <comment>210</comment>
  </data>
  <data name="loginError6" xml:space="preserve">
    <value>The new password cannot be the same as the current one</value>
    <comment>211</comment>
  </data>
  <data name="loginError8" xml:space="preserve">
    <value>Facebook account not associated, please register your account</value>
    <comment>212</comment>
  </data>
  <data name="selectPayment" xml:space="preserve">
    <value>You must select a payment method</value>
    <comment>213</comment>
  </data>
  <data name="wrongCodeTwoFactor" xml:space="preserve">
    <value>The entered code is incorrect</value>
    <comment>214</comment>
  </data>
</root>